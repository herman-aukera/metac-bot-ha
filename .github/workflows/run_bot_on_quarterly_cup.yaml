# DISABLED: Forecast on Quarterly Cup
# This workflow is disabled until API secrets are configured
# To enable: uncomment this workflow and configure the required secrets in GitHub

# name: Forecast on Quarterly Cup

# on:
#   workflow_dispatch:
#   # Disabled automatic scheduling until secrets are configured
#   # schedule:
#   #   - cron: "0 0 */2 * *" # runs at midnight every 2 days

# # Add concurrency group to prevent parallel runs
# concurrency:
#   group: ${{ github.workflow }}
#   cancel-in-progress: false

# # Job to run the quarterly cup forecast bot
# jobs:
#   quarterly_forecast:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out repository
#         uses: actions/checkout@v4
#       - uses: actions/setup-python@v4
#         with:
#           python-version: "3.11"
#       - name: Install poetry
#         uses: snok/install-poetry@v1
#         with:
#           virtualenvs-create: true
#           virtualenvs-in-project: true
#           installer-parallel: true
#       - name: Load cached venv
#         id: cached-poetry-dependencies
#         uses: actions/cache@v4
#         with:
#           path: .venv
#           key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
#       - name: Install dependencies
#         run: poetry install --no-interaction --no-root
#       - name: Run bot
#         run: |
#           poetry run python main.py --mode quarterly_cup
#         # Configure these secrets in GitHub repository settings:
#         # Settings --> Secrets and variables --> Actions
#         env:
#           METACULUS_TOKEN: ${{ secrets.METACULUS_TOKEN }}
#           PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
#           EXA_API_KEY: ${{ secrets.EXA_API_KEY }}
#           OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#           OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
#           ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
#           ASKNEWS_CLIENT_ID: ${{ secrets.ASKNEWS_CLIENT_ID }}
#           ASKNEWS_SECRET: ${{ secrets.ASKNEWS_SECRET }}
