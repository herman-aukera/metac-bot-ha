name: Test Forecasting Tools Dependency

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/run_bot_on_*.yaml'

jobs:
  test-forecasting-tools:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 🔧 Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: 📦 Install dependencies (Poetry with pip fallback)
        run: |
          set -e
          echo "🔍 Trying Poetry install..."
          if poetry install --only main -n >/dev/null 2>&1 && poetry run python -c "import sys; print(sys.version)" >/dev/null 2>&1; then
            echo "✅ Poetry environment ready"
            echo "PY_RUN=poetry run python" >> "$GITHUB_ENV"
          else
            echo "⚠️ Poetry failed or not usable; falling back to pip"
            python3 -m pip install --upgrade pip
            python3 -m pip install python-dotenv pydantic requests openai anthropic httpx aiofiles pyyaml typer pytest
            python3 -m pip install forecasting-tools || echo "⚠️ forecasting-tools not available via pip"
            python3 -m pip install -e . || true
            echo "PY_RUN=python3" >> "$GITHUB_ENV"
            echo "PYTHONPATH=$GITHUB_WORKSPACE/src" >> "$GITHUB_ENV"
          fi

      - name: 🧪 Test critical imports
        run: |
          echo "🧪 Testing all critical imports:"
          $PY_RUN - <<'PY'
          import sys
          pkgs = ['dotenv', 'pydantic', 'requests', 'openai', 'forecasting_tools']
          failed = []
          for p in pkgs:
              try:
                  __import__(p)
                  print(f'✅ {p}: imported successfully')
              except Exception as e:
                  print(f'❌ {p}: {e}')
                  failed.append(p)
          if failed:
              print('💥 Missing:', failed)
              sys.exit(1)
          print('🎉 All critical dependencies are available!')
          PY

      - name: 🧪 Test main.py imports
        run: |
          echo "🧪 Testing main.py import resolution:"
          $PY_RUN - <<'PY'
          import sys
          try:
              from dotenv import load_dotenv
              from forecasting_tools import (
                  AskNewsSearcher,
                  BinaryQuestion,
                  ForecastBot,
                  GeneralLlm,
                  MetaculusApi,
                  MetaculusQuestion,
                  MultipleChoiceQuestion,
                  NumericDistribution,
                  NumericQuestion,
                  PredictedOption,
              )
              print('✅ forecasting_tools imports from main.py succeed')
          except Exception as e:
              print(f'❌ main.py import failed: {e}')
              try:
                  import forecasting_tools as ft
                  print('📦 forecasting_tools attrs:', [a for a in dir(ft) if not a.startswith('_')][:30])
              except Exception as ie:
                  print('❌ forecasting_tools not importable:', ie)
              sys.exit(1)
          PY
